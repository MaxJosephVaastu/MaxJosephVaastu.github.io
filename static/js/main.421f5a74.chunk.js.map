{"version":3,"sources":["App/App.module.scss","components/SideBar/SideBar.module.scss","actions/timers.ts","store/types.ts","components/Navbar/Navbar.tsx","actions/system.ts","components/SideBar/TimerItem.tsx","constants/types.ts","components/SideBar/SideBar.tsx","hooks/useInterval.ts","components/Timer/Timer.tsx","App/App.tsx","reportWebVitals.ts","reducers/timers.ts","reducers/system.ts","index.tsx","store/confgureStore.ts","reducers/index.ts","components/Timer/Timer.module.scss"],"names":["module","exports","startTimer","id","type","Navbar","sidebarIsOpen","useSelector","state","systemReducer","sideBarIsOpen","editable","timerReducer","dispatch","useDispatch","className","href","onClick","TimerItem","timer","currentTimerId","currentTimerIsActive","onToggle","onSetInfo","wrapClassName","cn","css","item","work","rest","passed","textAreaClassName","textArea","wrap","delay","info","onChange","event","target","value","SideBar","timers","timersList","currentTimer","isActive","root","open","map","i","key","payload","setTimerInfo","useInterval","callback","savedCallback","useRef","useEffect","current","interval","setInterval","clearInterval","Timer","currentTimerData","totalTimers","length","contDownClassName","countdown","infoClassName","useState","Date","now","currentTime","setCurrentTime","updateTimer","restTime","endTime","useSound","volume","playGong","playBell","nextTimer","msec","date","getMinutes","getSeconds","secToMMSS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","reducer","middleware","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","compose","maxAge","createStore","configureStore","combineReducers","action","find","newTimersList","newTimer","localStorage","setItem","JSON","stringify","newCurrentTimer","restoredTimerList","getItem","parse","e","restoredCurrentTimerState","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,oB,gGCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,4B,sHCCrS,SAASC,EAAWC,GACvB,MAAO,CACHC,KCJmB,cDKnBD,MEGD,IAAME,EAAmB,WAC5B,IAAMC,EAAgBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cAAcC,iBACtEC,EAAWJ,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAaD,YAChEE,EAAWC,cASjB,OAAO,6BACH,yBAAKC,UAAU,mBACX,uBAAGC,KAAK,IAAID,UAAU,oBAAtB,mFACA,wBAAIZ,GAAG,cACH,4BAAI,uBACAY,UAAU,6BACVE,QAAS,WAAQJ,ECvB1B,CACHT,KFOuB,sBCaX,UAKAE,GAAiB,4BAAI,uBACjBS,UAAU,iCACVE,QAhBE,WAClBJ,EFaG,CACHT,KCzBuB,oBCYnBO,GAAUE,EF8BX,CACHT,KCzCmB,kBCyBLO,EAAW,OAAS,SAGtBL,GAAiB,4BAAI,uBACjBS,UAAU,iCACVE,QAAS,WAAQJ,EFF9B,CACHT,KChCoB,mBC+Ba,gB,gEElB5Bc,EAAsC,SAAC,GAAoF,IAAD,EAAjFC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,eAAgBC,EAA0D,EAA1DA,qBAAsBV,EAAoC,EAApCA,SAAUW,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAE7GC,EAAgBC,IAAGC,IAAIC,MAAL,mBACnBD,IAAIE,KCpBa,SDoBNT,EAAMf,MADE,cAEnBsB,IAAIG,KCpBa,SDoBNV,EAAMf,MAFE,cAGnBsB,IAAII,OAASX,EAAMhB,GAAKiB,GAHL,IAOlBW,EAAoBN,IAAGC,IAAIM,SAAU,wBAM3C,OAAO,wBAAIjB,UAAWW,IAAIO,MACtB,yBAAKlB,UAAWS,GAAgBL,EAAMe,QAC/BvB,GAAYQ,EAAMhB,GAAKiB,IAAmB,yBAAKL,UAAWW,IAAIS,MAAOhB,EAAMgB,MAC7ExB,GAAYQ,EAAMhB,IAAMiB,GAAkB,yBAAKL,UAAWW,IAAIS,MAC3D,kBAAC,IAAD,CAAkBpB,UAAWgB,EAAmBK,SARtC,SAACC,GACnBd,EAAUJ,EAAMhB,GAAIkC,EAAMC,OAAOC,QAOgDA,MAAOpB,EAAMgB,QAG1F,uBACIpB,UAAU,mEACVE,QAASK,GACXH,EAAMhB,KAAOiB,GAAkBC,EAAuB,uBAAyB,0BE9BhFmB,G,MAAoB,WAAO,IAAD,EAC/BlC,EAAgBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cAAcC,iBACtE+B,EAASlC,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa8B,cAC9DtB,EAAiBb,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa+B,aAAaxC,MACnFkB,EAAuBd,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa+B,aAAaC,YACzFjC,EAAWJ,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAaD,YAChEE,EAAWC,cAEXC,EAAYU,IAAGC,IAAImB,MAAL,mBACjBnB,IAAIoB,KAAOxC,GADM,cAElB,cAAc,GAFI,IAKpB,OAAO,wBAAIS,UAAWA,GACpB,kBAAC,IAAD,KACG0B,EAAOM,KAAI,SAAC5B,EAAO6B,GAClB,OAAO,kBAAC,EAAD,CACL7B,MAAOA,EACPC,eAAgBA,EAChBC,qBAAsBA,EACtBV,SAAUA,EACVsC,IAAG,eAAUD,GACb1B,SAAU,WAAQH,EAAMhB,KAAOiB,EAAiBP,ENX/C,CACHT,KCrBoB,iBK+BwDS,EAASX,EAAWiB,EAAMhB,MACpGoB,UAAW,SAACpB,EAAIgC,GAAWtB,EN1B9B,SAAsBV,EAAYgC,GACrC,MAAO,CACH/B,KCVsB,iBDWtB8C,QAAS,CAAE/C,KAAIgC,SMuBuBgB,CAAahD,EAAIgC,c,wBChBhDiB,EAjBK,SAACC,EAAoBnB,GACvC,IAAMoB,EAAgBC,kBAAiB,eAEvCC,qBAAU,WACRF,EAAcG,QAAUJ,KAG1BG,qBAAU,WACR,GAAc,OAAVtB,EAAgB,CAClB,IAAMwB,EAAWC,aAAY,kBAAML,EAAcG,YAAWvB,GAAS,GACrE,OAAO,kBAAM0B,cAAcF,OAI5B,CAACxB,K,QCLO2B,EAAkB,WAAO,IAAD,EAC7BvD,EAAgBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cAAcC,iBACtEU,EAAiBb,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa+B,aAAaxC,MACnFwC,EAAepC,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa8B,WAAWtB,MAC/E0C,EAAmBvD,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa+B,gBACxEoB,EAAcxD,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa8B,WAAWsB,UAC9EvB,EAASlC,aAAY,SAACC,GAAD,OAAsBA,EAAMI,aAAa8B,cAE9D7B,EAAWC,cAEXC,EAAYU,IAAGC,IAAImB,MAAL,mBACjBnB,IAAIoB,KAAOxC,GADM,cAEjBoB,IAAIE,KHvBiB,SGuBVe,EAAcvC,MAFR,cAGjBsB,IAAIG,KHvBiB,SGuBVc,EAAcvC,MAHR,IAKd6D,EAAoBxC,IAAGC,IAAIwC,UAAW,6BACtCC,EAAgB1C,IAAGC,IAAIS,KAAM,6BAhBA,EAkBGiC,mBAASC,KAAKC,KAlBjB,mBAkB5BC,EAlB4B,KAkBfC,EAlBe,KAoBnCpB,GACE,WACEqB,MAEFX,EAAiBlB,SAAW,IAAO,MAGrCY,qBAAU,WACRgB,EAAeV,EAAiBY,YAC/B,CAACZ,EAAiBa,UA7Bc,MA+BhBC,YACjB,kBAAmB,CAAEC,OAAQ,IADxBC,EA/B4B,sBAkChBF,YACjB,kBAAmB,CAAEC,OAAQ,IADxBE,EAlC4B,oBAgD7BN,EAAc,WAClB,IAAMH,EAAMD,KAAKC,MACjBE,EAAeV,EAAiBa,QAAUL,GACtCA,EAAMR,EAAiBa,UACzBH,EAAe,GACf3D,ER/CK,CACHT,KChBkB,eO+CN,WAChB,GAAIgB,EAAiB2C,EAAa,CAChC,IAAMiB,EAAYvC,EAAOrB,EAAiB,GHnDtB,SGoDhB4D,EAAU5E,MAAqB0E,IHnDf,SGoDhBE,EAAU5E,MAAqB2E,IACnClE,EAASX,EAAWkB,EAAiB,IACrCP,ERIK,CACHT,KCpDgC,8BOyDlC4E,KAUJ,OAAO,yBAAKjE,UAAWA,GACrB,yBAAKA,UAAWoD,GACbxB,EAAaR,MAEhB,yBAAKpB,UAAWkD,GAVA,SAACgB,GACjB,IAAMC,EAAO,IAAIb,KAAKY,GACtB,MAAM,GAAN,OAAUC,EAAKC,aAAe,GAAK,IAAM,IAAzC,OAA8CD,EAAKC,aAAnD,YAAmED,EAAKE,aAAe,GAAK,IAAM,IAAlG,OAAuGF,EAAKE,cASzGC,CAAUd,IAEb,uBACExD,UAAU,uDACVE,QAAS,WACPJ,ER9DG,CACHT,KCrBoB,mBOoFtB0D,EAAiBlB,SAAW,uBAAyB,yB,yBCzD5C0C,MApBf,WAEE,IAAMzE,EAAWC,cAOjB,OANA0C,qBAAU,WACR3C,ET2BO,CACHT,KCpCsB,mBQS1BS,ENNO,CACHT,KFEsB,mBQI1BS,ETqCO,CACHT,KC7CoC,mCQQvC,IAGD,oCACE,kBAAC,EAAD,MACA,yBAAKW,UAAWW,IAAImB,MAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,SCVO0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCLRQ,EAA4B,CAC9BtD,WAAY,CACR,CACIvC,GAAI,EACJC,KNRc,OMSd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KNbc,OMcd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,EACJC,KNpBc,OMqBd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KNzBc,OM0Bd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,EACJC,KNhCc,OMiCd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KNrCc,OMsCd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,EACJC,KN5Cc,OM6Cd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KNjDc,OMkDd+B,KAAM,iCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KNxDc,OMyDd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,EACJC,KN7Dc,OM8Dd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KNpEc,OMqEd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNzEc,OM0Ed+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KNhFc,OMiFd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNrFc,OMsFd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KN5Fc,OM6Fd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNjGc,OMkGd+B,KAAM,iCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNxGc,OMyGd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KN7Gc,OM8Gd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KNpHc,OMqHd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNzHc,OM0Hd+B,KAAM,iCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNhIc,OMiId+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNrIc,OMsId+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KN5Ic,OM6Id+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNjJc,OMkJd+B,KAAM,iCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNxJc,OMyJd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KN7Jc,OM8Jd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KNpKc,OMqKd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNzKc,OM0Kd+B,KAAM,iCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNhLc,OMiLd+B,KAAM,uCACND,MAAO,IAEX,CACI/B,GAAI,GACJC,KNrLc,OMsLd+B,KAAM,iCACND,MAAO,GAEX,CACI/B,GAAI,GACJC,KN5Lc,OM6Ld+B,KAAM,uCACND,MAAO,KAGfS,aAAc,CACVxC,GAAI,EACJyC,UAAU,EACV8B,SAAU,KACVC,QAAS,GAEbhE,UAAU,GCrMRqF,EAA4B,CAC9BtF,eAAe,GCMbuF,ECLS,SAAwBC,GACnC,IAAIC,EAAaC,YAAgBC,KAUjC,MAP8C,qBAAXC,QAAkF,oBAAhDA,OAAeC,+BAChFJ,EAAaK,YACTL,EACCG,OAAeC,6BAA6B,CAAEE,OAAQ,QAIxDC,YAAYR,EAASC,GDNlBQ,CELaC,YAAgB,CACvChG,aJqMwB,WAAkE,IAAjEJ,EAAgE,uDAAxDwF,EAAca,EAA0C,uCACzF,OAAQA,EAAOzG,MACX,IV5MmB,cU8MX,IAAMkE,EAAMD,KAAKC,MACXb,EAAUjD,EAAMkC,WAAWoE,MAAK,SAAA3F,GAAK,OAAIA,EAAMhB,KAAO0G,EAAO1G,MACnE,OAAO,2BACAK,GADP,IACcmC,aAAc,CACpBxC,GAAIsD,EAAStD,GACbyC,UAAU,EACV8B,SNjNC,IMiNSjB,EAASvB,MACnByC,QAASL,ENlNR,IMkNcb,EAASvB,SAIxC,IVxNsB,iBUyNjB,IAAD,EACyB2E,EAAO3D,QAApB/C,EADZ,EACYA,GAAIgC,EADhB,EACgBA,KACN4E,EAAgBvG,EAAMkC,WAAWK,KAAI,SAAA5B,GACvC,OAAOA,EAAMhB,KAAOA,EAAb,2BAAuBgB,GAAvB,IAA8BgB,SAAShB,KAElD,OAAO,2BAAKX,GAAZ,IAAmBkC,WAAYqE,IAEvC,IV/NkB,aUiOV,OAAO,2BACAvG,GADP,IACcmC,aAAa,2BAChBnC,EAAMmC,cADS,IAElBC,UAAU,EACV8B,SAAUlE,EAAMmC,aAAagC,QAAUN,KAAKC,UAI5D,IVxOoB,eU0OZ,IAAM0C,EAA0B,2BACzBxG,EAAMmC,cADmB,IAE5BC,UAAWpC,EAAMmC,aAAaC,WAE5B0B,EAAMD,KAAKC,MAQjB,OAPI9D,EAAMmC,aAAaC,SACnBoE,EAAStC,SAAWlE,EAAMmC,aAAagC,QAAUN,KAAKC,MAEtD0C,EAASrC,QAAUL,EAAM9D,EAAMmC,aAAa+B,SAGhDuC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,IAC7C,2BAAKxG,GAAZ,IAAmBmC,aAAcqE,IAEzC,IVtPuB,kBUwPf,OAAO,2BAAKxG,GAAZ,IAAmBG,UAAWH,EAAMG,WAE5C,IV3PoB,eU6PZ,IAAM0G,EAAgC,2BAAQ7G,EAAMmC,cAAd,IAA4BC,UAAU,EAAOzC,GAAI,EAAGuE,SN9PjF,IM8P2FlE,EAAMkC,WAAW,GAAGR,MAAmByC,QN9PlI,IM8P2InE,EAAMkC,WAAW,GAAGR,QAExK,OADA+E,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUC,IAC7C,2BAAK7G,GAAZ,IAAmBmC,aAAc0E,IAEzC,IV9PmB,cUiQX,OADAJ,aAAaC,QAAQ,YAAaC,KAAKC,UAAU5G,EAAMkC,aAChDlC,EAEf,IVpQsB,iBUsQd,IAAM8G,EAAoBL,aAAaM,QAAQ,aAC/C,GAAID,EACA,IACI,IAAMP,EAAgBI,KAAKK,MAAMF,GACjC,OAAO,2BAAK9G,GAAZ,IAAmBkC,WAAYqE,IAEnC,MAAOU,GACH,OAAO,eAAKzB,GAGpB,OAAO,eAAKA,GAEpB,IVhRgC,2BUmRxB,OADAiB,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU5G,EAAMmC,eACnDnC,EAEf,IVpRoC,+BUsR5B,IAAMkH,EAA4BT,aAAaM,QAAQ,gBACvD,GAAIG,EACA,IACI,IAAML,EAAkBF,KAAKK,MAAME,GAEnC,OADIL,EAAgBzE,WAAUyE,EAAgB3C,SAAW2C,EAAgB1C,QAAUN,KAAKC,OACjF,2BAAK9D,GAAZ,IAAmBmC,aAAc0E,IAErC,MAAOI,GACH,OAAOjH,EAGf,OAAOA,EAEf,QACI,OAAOA,IIvSfC,cHAyB,WAAmE,IAAlED,EAAiE,uDAAzDwF,EAAca,EAA2C,uCAC3F,OAAQA,EAAOzG,MACX,IXIsB,iBWFd,IAAMM,EAA0D,SAA1CuG,aAAaM,QAAQ,iBAC3C,OAAO,2BAAK/G,GAAZ,IAAmBE,cAAeA,IAE1C,IXFuB,kBWKf,OADAuG,aAAaC,QAAQ,gBAAiBS,QAAQnH,EAAME,gBAC7C,2BAAKF,GAAZ,IAAmBE,eAAgBF,EAAME,gBAEjD,QACI,OAAOF,OCRnBoH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU7B,MAAOA,GACf,kBAAC,EAAD,QAGJ8B,SAASC,eAAe,SAM1BzC,K,kBGtBAvF,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,KAAO,uB","file":"static/js/main.421f5a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1ZE4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__RVxdS\",\"open\":\"SideBar_open__2xl08\",\"wrap\":\"SideBar_wrap__29Ins\",\"item\":\"SideBar_item__1D7Hl\",\"work\":\"SideBar_work__TB2fr\",\"rest\":\"SideBar_rest__snBKq\",\"current\":\"SideBar_current__13yBA\",\"passed\":\"SideBar_passed__Hwhc3\",\"info\":\"SideBar_info__1j0K7\",\"textArea\":\"SideBar_textArea__3XeRp\"};","import { TimerActionTypes, START_TIMER, STOP_TIMER, TOGGLE_TIMER, RESET_TIMERS, TOGGLE_EDITABLE, SET_TIMER_INFO, RESTORE_CONFIG, SAVE_CONFIG, RESTIORE_CURRENT_TIMER_STATE, SAVE_CURRENT_TIMER_STATE } from 'store/types'\r\n\r\nexport function startTimer(id: number): TimerActionTypes {\r\n    return {\r\n        type: START_TIMER,\r\n        id\r\n    }\r\n}\r\n\r\nexport function setTimerInfo(id: number, info: string): TimerActionTypes {\r\n    return {\r\n        type: SET_TIMER_INFO,\r\n        payload: { id, info }\r\n    }\r\n}\r\n\r\nexport function stopTimer(): TimerActionTypes {\r\n    return {\r\n        type: STOP_TIMER\r\n    }\r\n}\r\n\r\nexport function toggleTimer(): TimerActionTypes {\r\n    return {\r\n        type: TOGGLE_TIMER\r\n    }\r\n}\r\n\r\nexport function toggleEditable(): TimerActionTypes {\r\n    return {\r\n        type: TOGGLE_EDITABLE\r\n    }\r\n}\r\n\r\nexport function resetTimers(): TimerActionTypes {\r\n    return {\r\n        type: RESET_TIMERS\r\n    }\r\n}\r\n\r\nexport function restoreConfig(): TimerActionTypes {\r\n    return {\r\n        type: RESTORE_CONFIG\r\n    }\r\n}\r\n\r\nexport function saveConfig(): TimerActionTypes {\r\n    return {\r\n        type: SAVE_CONFIG\r\n    }\r\n}\r\n\r\nexport function restoreCurrentTimerState(): TimerActionTypes {\r\n    return {\r\n        type: RESTIORE_CURRENT_TIMER_STATE\r\n    }\r\n}\r\n\r\nexport function saveCurrentTimerState(): TimerActionTypes {\r\n    return {\r\n        type: SAVE_CURRENT_TIMER_STATE\r\n    }\r\n}","export const START_TIMER = 'START_TIMER'\r\nexport const SET_TIMER_INFO = 'SET_TIMER_INFO'\r\nexport const STOP_TIMER = 'STOP_TIMER'\r\nexport const TOGGLE_TIMER = 'TOGGLE_TIMER'\r\nexport const RESET_TIMERS = 'RESET_TIMERS'\r\nexport const TOGGLE_EDITABLE = 'TOGGLE_EDITABLE'\r\nexport const RESTORE_CONFIG = 'RESTORE_CONFIG'\r\nexport const SAVE_CONFIG = 'SAVE_CONFIG'\r\nexport const SAVE_CURRENT_TIMER_STATE = 'SAVE_CURRENT_TIMER_STATE'\r\nexport const RESTIORE_CURRENT_TIMER_STATE = 'RESTIORE_CURRENT_TIMER_STATE'\r\n\r\nexport const TOGGLE_SIDE_BAR = 'TOGGLE_SIDE_BAR'\r\nexport const SYSTEM_RESTORE = 'SYSTEM_RESTORE'\r\n\r\n// interface for action\r\ninterface StartTimerAction {\r\n  type: typeof START_TIMER\r\n  id: number\r\n}\r\ninterface SetTimerInfoAction {\r\n  type: typeof SET_TIMER_INFO\r\n  payload: {\r\n    id: number\r\n    info: string\r\n  }\r\n}\r\n\r\ninterface StopTimerAction {\r\n  type: typeof STOP_TIMER\r\n}\r\n\r\ninterface ToggleTimerAction {\r\n  type: typeof TOGGLE_TIMER\r\n}\r\ninterface ResetTimersAction {\r\n  type: typeof RESET_TIMERS\r\n}\r\ninterface ToggleEditableAction {\r\n  type: typeof TOGGLE_EDITABLE\r\n}\r\ninterface restoreConfigAction {\r\n  type: typeof RESTORE_CONFIG\r\n}\r\ninterface saveConfigAction {\r\n  type: typeof SAVE_CONFIG\r\n}\r\ninterface saveCurrentTimerStateAction {\r\n  type: typeof SAVE_CURRENT_TIMER_STATE\r\n}\r\ninterface restoreCurrentTimerStateAction {\r\n  type: typeof RESTIORE_CURRENT_TIMER_STATE\r\n}\r\n\r\nexport type TimerActionTypes = StartTimerAction | StopTimerAction | ToggleTimerAction | ResetTimersAction | ToggleEditableAction | SetTimerInfoAction | restoreConfigAction | saveConfigAction | saveCurrentTimerStateAction | restoreCurrentTimerStateAction\r\n\r\ninterface ToggleSideBarAction {\r\n  type: typeof TOGGLE_SIDE_BAR\r\n}\r\ninterface systemRestoreAction {\r\n  type: typeof SYSTEM_RESTORE\r\n}\r\n\r\nexport type SystemActionTypes = ToggleSideBarAction | systemRestoreAction\r\n\r\n// types\r\n\r\nexport type TimerData = {\r\n  id: number\r\n  type: string\r\n  delay: number\r\n  info: string\r\n}\r\nexport interface CurrentTimerData {\r\n  id: number\r\n  isActive: boolean\r\n  restTime: number\r\n  endTime: number\r\n}\r\n\r\nexport interface TimersState {\r\n  timersList: TimerData[]\r\n  currentTimer: CurrentTimerData\r\n  editable: boolean\r\n}\r\nexport interface SystemState {\r\n  sideBarIsOpen: boolean\r\n}\r\n","import React from 'react'\r\nimport './Navbar.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleSideBar } from 'actions/system'\r\nimport { RootState } from 'reducers'\r\nimport { resetTimers, saveConfig, toggleEditable } from 'actions/timers'\r\n\r\nexport const Navbar: React.FC = () => {\r\n    const sidebarIsOpen = useSelector((state: RootState) => state.systemReducer.sideBarIsOpen)\r\n    const editable = useSelector((state: RootState) => state.timerReducer.editable)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const togleEditable = () => {\r\n        dispatch(toggleEditable())\r\n        if (editable) dispatch(saveConfig())\r\n    }\r\n\r\n    return <nav>\r\n        <div className=\"nav-wrapper px1\">\r\n            <a href=\"/\" className=\"brand-logo right\">Сеньор Помидор</a>\r\n            <ul id=\"nav-mobile\">\r\n                <li><i\r\n                    className=\"large material-icons hover\"\r\n                    onClick={() => { dispatch(toggleSideBar()) }}\r\n                >timer</i></li>\r\n                {\r\n                    sidebarIsOpen && <li><i\r\n                        className=\"large material-icons hover pl1\"\r\n                        onClick={togleEditable}\r\n                    >{editable ? 'save' : 'edit'}</i></li>\r\n                }\r\n                {\r\n                    sidebarIsOpen && <li><i\r\n                        className=\"large material-icons hover pl1\"\r\n                        onClick={() => { dispatch(resetTimers()) }}\r\n                    >restore</i></li>\r\n                }\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}","import { SystemActionTypes, SYSTEM_RESTORE, TOGGLE_SIDE_BAR } from 'store/types'\r\n\r\nexport function toggleSideBar(): SystemActionTypes {\r\n    return {\r\n        type: TOGGLE_SIDE_BAR\r\n    }\r\n}\r\n\r\nexport function systemRestore(): SystemActionTypes {\r\n    return {\r\n        type: SYSTEM_RESTORE\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport cn from 'classnames'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\n\r\nimport css from './SideBar.module.scss'\r\nimport { TIMER_REST, TIMER_WORK } from 'constants/types'\r\nimport { TimerData } from 'store/types'\r\n\r\ntype TimerItemProps = {\r\n    timer: TimerData\r\n    currentTimerId: number\r\n    currentTimerIsActive: boolean\r\n    editable: boolean\r\n    onToggle(): void,\r\n    onSetInfo(id: number, info: string): void\r\n}\r\n\r\nexport const TimerItem: React.FC<TimerItemProps> = ({ timer, currentTimerId, currentTimerIsActive, editable, onToggle, onSetInfo }) => {\r\n\r\n    const wrapClassName = cn(css.item, {\r\n        [css.work]: timer.type === TIMER_WORK,\r\n        [css.rest]: timer.type === TIMER_REST,\r\n        [css.passed]: timer.id < currentTimerId\r\n        // [css.current]: timer.id === currentTimerId\r\n    });\r\n\r\n    const textAreaClassName = cn(css.textArea, 'materialize-textarea')\r\n\r\n    const changeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        onSetInfo(timer.id, event.target.value)\r\n    }\r\n\r\n    return <li className={css.wrap}>\r\n        <div className={wrapClassName}>{timer.delay}\r\n            {(!editable || timer.id < currentTimerId) && <div className={css.info}>{timer.info}</div>}\r\n            {editable && timer.id >= currentTimerId && <div className={css.info}>\r\n                <TextareaAutosize className={textAreaClassName} onChange={changeHandler} value={timer.info} />\r\n            </div>\r\n            }\r\n            <i\r\n                className=\"material-icons hover secondary-content amber-text text-lighten-5\"\r\n                onClick={onToggle}\r\n            >{timer.id === currentTimerId && currentTimerIsActive ? 'pause_circle_outline' : 'play_circle_outline'}</i>\r\n        </div>\r\n    </li>\r\n}","export const TIMER_WORK = 'work'\r\nexport const TIMER_REST = 'rest'\r\n\r\nexport const TIME_COEF = 1000 * 60","import React from 'react'\r\nimport css from './SideBar.module.scss'\r\nimport cn from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { TimerItem } from './TimerItem'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from 'reducers'\r\nimport { setTimerInfo, startTimer, toggleTimer } from 'actions/timers'\r\n\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nexport const SideBar: React.FC = () => {\r\n  const sidebarIsOpen = useSelector((state: RootState) => state.systemReducer.sideBarIsOpen)\r\n  const timers = useSelector((state: RootState) => state.timerReducer.timersList)\r\n  const currentTimerId = useSelector((state: RootState) => state.timerReducer.currentTimer.id)\r\n  const currentTimerIsActive = useSelector((state: RootState) => state.timerReducer.currentTimer.isActive)\r\n  const editable = useSelector((state: RootState) => state.timerReducer.editable)\r\n  const dispatch = useDispatch()\r\n\r\n  const className = cn(css.root, {\r\n    [css.open]: sidebarIsOpen,\r\n    'collection': true\r\n  });\r\n\r\n  return <ul className={className}>\r\n    <PerfectScrollbar>\r\n      {timers.map((timer, i) => {\r\n        return <TimerItem\r\n          timer={timer}\r\n          currentTimerId={currentTimerId}\r\n          currentTimerIsActive={currentTimerIsActive}\r\n          editable={editable}\r\n          key={`timer${i}`}\r\n          onToggle={() => { timer.id === currentTimerId ? dispatch(toggleTimer()) : dispatch(startTimer(timer.id)) }}\r\n          onSetInfo={(id, info) => { dispatch(setTimerInfo(id, info)) }}\r\n        />\r\n      })}\r\n    </PerfectScrollbar>\r\n  </ul>\r\n}","import { useEffect, useRef } from 'react'\r\n\r\nconst useInterval = (callback: Function, delay?: number | null) => {\r\n  const savedCallback = useRef<Function>(() => {})\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (delay !== null) {\r\n      const interval = setInterval(() => savedCallback.current(), delay || 0)\r\n      return () => clearInterval(interval)\r\n    }\r\n\r\n    return undefined;\r\n  }, [delay])\r\n};\r\n\r\nexport default useInterval","import React, { useEffect, useState } from 'react'\r\nimport css from './Timer.module.scss'\r\nimport cn from 'classnames'\r\n\r\nimport { TIMER_REST, TIMER_WORK, TIME_COEF } from 'constants/types'\r\nimport useInterval from 'hooks/useInterval'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from 'reducers'\r\nimport { saveCurrentTimerState, startTimer, stopTimer, toggleTimer } from 'actions/timers'\r\nimport useSound from 'use-sound'\r\n\r\nexport const Timer: React.FC = () => {\r\n  const sidebarIsOpen = useSelector((state: RootState) => state.systemReducer.sideBarIsOpen)\r\n  const currentTimerId = useSelector((state: RootState) => state.timerReducer.currentTimer.id)\r\n  const currentTimer = useSelector((state: RootState) => state.timerReducer.timersList[currentTimerId])\r\n  const currentTimerData = useSelector((state: RootState) => state.timerReducer.currentTimer)\r\n  const totalTimers = useSelector((state: RootState) => state.timerReducer.timersList.length)\r\n  const timers = useSelector((state: RootState) => state.timerReducer.timersList)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const className = cn(css.root, {\r\n    [css.open]: sidebarIsOpen,\r\n    [css.work]: currentTimer!.type === TIMER_WORK,\r\n    [css.rest]: currentTimer!.type === TIMER_REST\r\n  });\r\n  const contDownClassName = cn(css.countdown, 'amber-text text-lighten-5');\r\n  const infoClassName = cn(css.info, 'amber-text text-lighten-5');\r\n  \r\n  const [currentTime, setCurrentTime] = useState(Date.now)\r\n  \r\n  useInterval(\r\n    () => {\r\n      updateTimer();\r\n    },\r\n    currentTimerData.isActive ? 1000 : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    setCurrentTime(currentTimerData.restTime)\r\n  }, [currentTimerData.endTime])\r\n\r\n  const [playGong] = useSound(\r\n    'sounds/gong.mp3', { volume: 1 }\r\n  );\r\n  const [playBell] = useSound(\r\n    'sounds/bell.mp3', { volume: 1 }\r\n  );\r\n\r\n  const nextTimer = () => {\r\n    if (currentTimerId < totalTimers) {\r\n      const nextTimer = timers[currentTimerId + 1]\r\n      if (nextTimer.type === TIMER_WORK) playGong()\r\n      if (nextTimer.type === TIMER_REST) playBell()\r\n      dispatch(startTimer(currentTimerId + 1))\r\n      dispatch(saveCurrentTimerState())\r\n    }\r\n  }\r\n  \r\n  const updateTimer = () => {\r\n    const now = Date.now()\r\n    setCurrentTime(currentTimerData.endTime - now)\r\n    if (now > currentTimerData.endTime) {\r\n      setCurrentTime(0)\r\n      dispatch(stopTimer())\r\n      nextTimer()\r\n    }\r\n  }\r\n\r\n  const secToMMSS = (msec: number) => {\r\n    const date = new Date(msec)\r\n    return `${date.getMinutes() < 10 ? '0' : ''}${date.getMinutes()}:${date.getSeconds() < 10 ? '0' : ''}${date.getSeconds()}`\r\n  }\r\n\r\n\r\n  return <div className={className}>\r\n    <div className={infoClassName}>\r\n      {currentTimer.info}\r\n    </div>\r\n    <div className={contDownClassName}>\r\n      {secToMMSS(currentTime)}\r\n    </div>\r\n    <i\r\n      className=\"large material-icons hover amber-text text-lighten-5\"\r\n      onClick={() => {\r\n        dispatch(toggleTimer())\r\n      }}\r\n    >{currentTimerData.isActive ? 'pause_circle_outline' : 'play_circle_outline'}</i>\r\n  </div >\r\n}","import React from 'react';\nimport { Navbar, SideBar, Timer } from 'components';\n\nimport 'styles/common.scss'\nimport css from './App.module.scss'\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { systemRestore } from 'actions/system';\nimport { restoreConfig, restoreCurrentTimerState } from 'actions/timers';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(restoreConfig())\n    dispatch(systemRestore())\n    dispatch(restoreCurrentTimerState())\n  }, [])\n\n  return (\n    <>\n      <Navbar />\n      <div className={css.root}>\n        <SideBar />\n        <Timer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import * as TYPES from 'constants/types'\r\nimport { TIME_COEF } from 'constants/types'\r\nimport { START_TIMER, STOP_TIMER, TimerActionTypes, RESET_TIMERS, TimersState, TOGGLE_TIMER, TOGGLE_EDITABLE, SET_TIMER_INFO, RESTORE_CONFIG, SAVE_CONFIG, TimerData, SAVE_CURRENT_TIMER_STATE, RESTIORE_CURRENT_TIMER_STATE, CurrentTimerData } from 'store/types'\r\n\r\nconst initialState: TimersState = {\r\n    timersList: [\r\n        {\r\n            id: 0,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 1,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 2\r\n        },\r\n        {\r\n            id: 2,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 3,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 5\r\n        },\r\n        {\r\n            id: 4,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 5,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 2\r\n        },\r\n        {\r\n            id: 6,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 7,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 10\r\n        },\r\n        {\r\n            id: 8,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 9,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 2\r\n        },\r\n        {\r\n            id: 10,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 11,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 5\r\n        },\r\n        {\r\n            id: 12,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 13,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 2\r\n        },\r\n        {\r\n            id: 14,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 15,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 60\r\n        },\r\n        {\r\n            id: 16,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 17,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 4\r\n        },\r\n        {\r\n            id: 18,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 19,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 10\r\n        },\r\n        {\r\n            id: 20,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 21,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 4\r\n        },\r\n        {\r\n            id: 22,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 23,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 20\r\n        },\r\n        {\r\n            id: 24,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 25,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 4\r\n        },\r\n        {\r\n            id: 26,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 27,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 10\r\n        },\r\n        {\r\n            id: 28,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        },\r\n        {\r\n            id: 29,\r\n            type: TYPES.TIMER_REST,\r\n            info: 'Отдых',\r\n            delay: 4\r\n        },\r\n        {\r\n            id: 30,\r\n            type: TYPES.TIMER_WORK,\r\n            info: 'Работа',\r\n            delay: 30\r\n        }\r\n    ],\r\n    currentTimer: {\r\n        id: 0,\r\n        isActive: false,\r\n        restTime: 30 * TIME_COEF,\r\n        endTime: 0\r\n    },\r\n    editable: false\r\n}\r\n\r\nexport const timerReducer = (state = initialState, action: TimerActionTypes): TimersState => {\r\n    switch (action.type) {\r\n        case START_TIMER:\r\n            {\r\n                const now = Date.now()\r\n                const current = state.timersList.find(timer => timer.id === action.id)\r\n                return {\r\n                    ...state, currentTimer: {\r\n                        id: current!.id,\r\n                        isActive: true,\r\n                        restTime: current!.delay * TIME_COEF,\r\n                        endTime: now + current!.delay * TIME_COEF\r\n                    }\r\n                }\r\n            }\r\n        case SET_TIMER_INFO:\r\n            {\r\n                const { id, info } = action.payload\r\n                const newTimersList = state.timersList.map(timer => {\r\n                    return timer.id === id ? { ...timer, info } : timer\r\n                })\r\n                return { ...state, timersList: newTimersList }\r\n            }\r\n        case STOP_TIMER:\r\n            {\r\n                return {\r\n                    ...state, currentTimer: {\r\n                        ...state.currentTimer,\r\n                        isActive: false,\r\n                        restTime: state.currentTimer.endTime - Date.now()\r\n                    }\r\n                }\r\n            }\r\n        case TOGGLE_TIMER:\r\n            {\r\n                const newTimer: CurrentTimerData = {\r\n                    ...state.currentTimer,\r\n                    isActive: !state.currentTimer.isActive\r\n                }\r\n                const now = Date.now()\r\n                if (state.currentTimer.isActive) {\r\n                    newTimer.restTime = state.currentTimer.endTime - Date.now()\r\n                } else {\r\n                    newTimer.endTime = now + state.currentTimer.restTime\r\n                }\r\n\r\n                localStorage.setItem('currentTimer', JSON.stringify(newTimer))\r\n                return { ...state, currentTimer: newTimer }\r\n            }\r\n        case TOGGLE_EDITABLE:\r\n            {\r\n                return { ...state, editable: !state.editable }\r\n            }\r\n        case RESET_TIMERS:\r\n            {\r\n                const newCurrentTimer:CurrentTimerData = { ...state.currentTimer, isActive: false, id: 0, restTime: state.timersList[0].delay * TIME_COEF, endTime: state.timersList[0].delay * TIME_COEF }\r\n                localStorage.setItem('currentTimer', JSON.stringify(newCurrentTimer))\r\n                return { ...state, currentTimer: newCurrentTimer }\r\n            }\r\n        case SAVE_CONFIG:\r\n            {\r\n                localStorage.setItem('timerList', JSON.stringify(state.timersList))\r\n                return state\r\n            }\r\n        case RESTORE_CONFIG:\r\n            {\r\n                const restoredTimerList = localStorage.getItem('timerList')\r\n                if (restoredTimerList) {\r\n                    try {\r\n                        const newTimersList = JSON.parse(restoredTimerList) as TimerData[]\r\n                        return { ...state, timersList: newTimersList }\r\n                    }\r\n                    catch (e) {\r\n                        return { ...initialState }\r\n                    }\r\n                }\r\n                return { ...initialState }\r\n            }\r\n        case SAVE_CURRENT_TIMER_STATE:\r\n            {\r\n                localStorage.setItem('currentTimer', JSON.stringify(state.currentTimer))\r\n                return state\r\n            }\r\n        case RESTIORE_CURRENT_TIMER_STATE:\r\n            {\r\n                const restoredCurrentTimerState = localStorage.getItem('currentTimer')\r\n                if (restoredCurrentTimerState) {\r\n                    try {\r\n                        const newCurrentTimer = JSON.parse(restoredCurrentTimerState) as CurrentTimerData\r\n                        if (newCurrentTimer.isActive) newCurrentTimer.restTime = newCurrentTimer.endTime - Date.now()\r\n                        return { ...state, currentTimer: newCurrentTimer }\r\n                    }\r\n                    catch (e) {\r\n                        return state\r\n                    }\r\n                }\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { STOP_TIMER, SystemState, TOGGLE_TIMER, SystemActionTypes, TOGGLE_SIDE_BAR, SYSTEM_RESTORE } from 'store/types'\r\n\r\nconst initialState: SystemState = {\r\n    sideBarIsOpen: false\r\n}\r\n\r\nexport const systemReducer = (state = initialState, action: SystemActionTypes): SystemState => {\r\n    switch (action.type) {\r\n        case SYSTEM_RESTORE:\r\n            {\r\n                const sideBarIsOpen = localStorage.getItem('sideBarIsOpen') === 'true'\r\n                return { ...state, sideBarIsOpen: sideBarIsOpen }\r\n            }\r\n        case TOGGLE_SIDE_BAR:\r\n            {\r\n                localStorage.setItem('sideBarIsOpen', String(!state.sideBarIsOpen))\r\n                return { ...state, sideBarIsOpen: !state.sideBarIsOpen }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store/confgureStore';\nimport { rootReducer } from 'reducers';\n\nconst store = configureStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from 'reducers/index'\r\n\r\nexport default function configureStore(reducer: typeof rootReducer) {\r\n    let middleware = applyMiddleware(thunk);\r\n    const reduxDevToolsEnabled = true\r\n\r\n    if (reduxDevToolsEnabled && typeof window !== 'undefined' && typeof (window as any).__REDUX_DEVTOOLS_EXTENSION__ === 'function') {\r\n        middleware = compose(\r\n            middleware,\r\n            (window as any).__REDUX_DEVTOOLS_EXTENSION__({ maxAge: 500 })\r\n        );\r\n    }\r\n\r\n    return createStore(reducer, middleware);\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { timerReducer } from './timers'\r\nimport { systemReducer } from './system'\r\n\r\nexport const rootReducer = combineReducers({\r\n    timerReducer,\r\n    systemReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Timer_root__1Vgxz\",\"work\":\"Timer_work__1zPxs\",\"rest\":\"Timer_rest__1UEVO\",\"open\":\"Timer_open__2l5Rs\",\"countdown\":\"Timer_countdown__2h9y7\",\"info\":\"Timer_info__36o-o\"};"],"sourceRoot":""}